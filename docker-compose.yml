version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - '3000:3000'
    depends_on:
      - product-service
      - customer-service
      - order-service
    restart: unless-stopped
    networks:
      - backend

  product-service:
    build: ./product-service
    ports:
      - '4001:4001'
    depends_on:
      - product-db
    restart: unless-stopped
    networks:
      - backend

  product-db:
    image: postgres
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./product-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "5433:5432"  # Mở cổng 5433 trên host để truy cập vào product-db

  customer-service:
    build: ./customer-service
    ports:
      - '4002:4002'
    depends_on:
      - customer-db
    restart: unless-stopped
    networks:
      - backend

  customer-db:
    image: postgres
    environment:
      POSTGRES_DB: customerdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./customer-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "5434:5432"  # Mở cổng 5434 trên host để truy cập vào customer-db

  order-service:
    build: ./order-service
    ports:
      - '4003:4003'
    depends_on:
      - order-db
    restart: unless-stopped
    networks:
      - backend

  order-db:
    image: postgres
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./order-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "5435:5432"  # Mở cổng 5435 trên host để truy cập vào order-db
  payment-service:
    build: ./payment-service
    ports:
      - '4006:4006'
    depends_on:
      - payment-db
    restart: unless-stopped
    networks:
      - backend

  payment-db:
    image: postgres
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./payment-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5436:5432"
    restart: unless-stopped
    networks:
      - backend

  inventory-service:
    build: ./inventory-service
    ports:
      - '4005:4005'
    depends_on:
      - inventory-db
    restart: unless-stopped
    networks:
      - backend

  inventory-db:
    image: postgres
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./inventory-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5437:5432"
    restart: unless-stopped
    networks:
      - backend

  shipping-service:
    build: ./shipping-service
    ports:
      - '4004:4004'
    depends_on:
      - shipping-db
    restart: unless-stopped
    networks:
      - backend

  shipping-db:
    image: postgres
    environment:
      POSTGRES_DB: shippingdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./shipping-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5438:5432"
    restart: unless-stopped
    networks:
      - backend
networks:
  backend:
    driver: bridge
